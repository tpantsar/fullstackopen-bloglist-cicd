# The deployment is triggered here, and the deployment status is notified to Discord. Tag release is also done here.
# https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#using-secrets-in-a-workflow
name: Backend CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, closed]

env:
  URL: https://fullstackopen-bloglist-cicd.onrender.com/ # URL of the deployed application
  color_success: 65280 # green
  color_failure: 16711680 # red

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Print NODE_ENV (Debug)
        run: echo $NODE_ENV

      - name: Print Working Directory (Debug)
        run: pwd

      - name: Show Directory Contents (Debug)
        run: ls -al

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json
          # https://github.com/actions/setup-node/tree/v4/?tab=readme-ov-file#caching-global-packages-data

      - name: Install Dependencies
        run: NODE_ENV=development npm ci --include=dev

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test
        env:
          NODE_ENV: "test"
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}

  deploy:
    # only run if the commit message does not contain #skip
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: ["backend-ci"]
    steps:
      - name: Trigger Deployment
        run: |
          curl --request POST \
            --url https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            --header 'accept: application/json' \
            --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
            --header 'content-type: application/json' \
            --data '{"clearCache": "do_not_clear"}'
      - name: Notify Discord on Deploy Success
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if: success()
        with:
          args: " " # Required argument (but empty since we use DISCORD_EMBEDS)
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: >
            [{
              "title": "âœ…New version deployed!",
              "description": "Url: ${{env.URL}}",
              "color": ${{env.color_success}},
              "timestamp": "${{ github.event.head_commit.timestamp || github.event.pull_request.updated_at }}"
            }]

  # https://github.com/anothrNick/github-tag-action/tree/f278d49d30cdd8775cc3e7dd00b5ee11686ee297/?tab=readme-ov-file#usage
  # https://github.com/anothrNick/github-tag-action/tree/f278d49d30cdd8775cc3e7dd00b5ee11686ee297/?tab=readme-ov-file#workflow
  tag_release:
    # only run if the commit message does not contain #skip
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}

    needs: ["deploy"]
    name: Tag Release
    runs-on: ubuntu-22.04
    permissions:
      contents: write # Ensure write access to push tags

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0 # Ensure the full history is fetched

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
