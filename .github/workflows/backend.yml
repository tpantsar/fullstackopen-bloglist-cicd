# This workflow is triggered only after the "Frontend Pipeline" workflow completes successfully.
# The deployment is triggered here, and the deployment status is notified to Discord.
name: Backend Pipeline

on:
  workflow_run:
    workflows: ["Frontend Pipeline"]
    types:
      - completed

env:
  URL: https://fullstackopen-bloglist-cicd.onrender.com/ # URL of the deployed application
  color_success: 65280 # green
  color_failure: 16711680 # red

jobs:
  build-lint-test:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Backend Pipeline

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure the full history is fetched
          path: backend # Checkout the code from the backend directory

      - name: Print Working Directory (Debug)
        run: pwd
      - name: Show Directory Contents (Debug)
        run: ls -al

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # https://github.com/actions/setup-node/tree/v4/?tab=readme-ov-file#caching-global-packages-data
          # cache-dependency-path: ./backend/package-lock.json
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Backend
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/
          retention-days: 7

      - name: Notify Discord on Build Failure
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if: failure() && !contains(github.event.workflow_run.head_commit.message, '#skip')
        with:
          args: " " # Required argument (but empty since we use DISCORD_EMBEDS)
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: >
            [{
              "title": "❌Backend Build failed!",
              "description": "Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})",
              "color": ${{env.color_failure}},
              "fields": [
                {
                  "name": "Workflow",
                  "value": "${{ github.workflow }}",
                  "inline": false
                }
              ],
              "timestamp": "${{ github.event.workflow_run.updated_at }}"
            }]

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test

  deploy:
    # only run if the commit message does not contain #skip
    if: ${{ github.event_name == 'push' && !contains(github.event.workflow_run.head_commit.message, '#skip') }}
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: ["build-lint-test"]
    steps:
      - name: Trigger Deployment
        run: |
          curl --request POST \
            --url https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            --header 'accept: application/json' \
            --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
            --header 'content-type: application/json' \
            --data '{"clearCache": "do_not_clear"}'
      - name: Notify Discord on Deploy Success
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if: success()
        with:
          args: " " # Required argument (but empty since we use DISCORD_EMBEDS)
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: >
            [{
              "title": "✅New version deployed!",
              "description": "Url: ${{env.URL}}",
              "color": ${{env.color_success}},
              "timestamp": "${{ github.event.workflow_run.updated_at }}"
            }]

  tag_release:
    # only run if the commit message does not contain #skip
    if: ${{ github.event_name == 'push' && !contains(github.event.workflow_run.head_commit.message, '#skip') }}
    name: Tag Release
    runs-on: ubuntu-latest
    needs: ["deploy"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure the full history is fetched
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
