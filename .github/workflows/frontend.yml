# This workflow will run on every push or pull request and must complete successfully for the backend workflow to trigger.
name: Frontend Pipeline

on:
  push:
    branches: [main, master]
    paths:
      - "frontend/**"
  pull_request:
    branches: [main, master]
    paths:
      - "frontend/**"
    types: [opened, synchronize]

env:
  color_failure: 16711680 # red

jobs:
  log:
    name: Log Information
    runs-on: ubuntu-latest
    steps:
      - name: Log Commit Message
        env:
          COMMIT_MESSAGE: ${{ toJson(github.event.head_commit.message) }}
        run: echo "$COMMIT_MESSAGE"

      - name: Log Commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"

      - name: log Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  build-lint-test:
    runs-on: ubuntu-latest
    name: Frontend Pipeline

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure the full history is fetched
          path: frontend # Checkout the code from the frontend directory

      - name: Print Working Directory (Debug)
        run: pwd
      - name: Show Directory Contents (Debug)
        run: ls -al

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # https://github.com/actions/setup-node/tree/v4/?tab=readme-ov-file#caching-global-packages-data
          # cache-dependency-path: frontend/package-lock.json
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/
          retention-days: 7

      - name: Notify Discord on Build Failure
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if: failure() && !contains(github.event.head_commit.message, '#skip')
        with:
          args: " " # Required argument (but empty since we use DISCORD_EMBEDS)
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: >
            [{
              "title": "❌Frontend Build Failed!",
              "description": "Commit: [${{ github.sha }}]",
              "color": ${{env.color_failure}},
              "fields": [
                {
                  "name": "Commit message",
                  "value": "${{ github.event.head_commit.message }}",
                  "inline": false
                },
                {
                  "name": "Workflow",
                  "value": "${{ github.workflow }}",
                  "inline": false
                }
              ],
              "timestamp": "${{ github.event.head_commit.timestamp || github.event.pull_request.updated_at }}"
            }]

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm run test
